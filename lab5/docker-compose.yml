version: '3.8'
services:
  redis:
    image: "redis:7-alpine"
    container_name: redis_service
    ports:
      - "6379:6379"
    networks:
      - app-network
  main:
    depends_on:
      - redis
    build: 
      context: ./main
      dockerfile: Dockerfile
    image: main_service
    container_name: main_service
    ports:
      - "5000:5000"
    environment:
      - REDIS_HOST=redis  # Hostname for Redis container
      - REDIS_PORT=6379
    networks:
      - app-network
  calc:
    depends_on:
      - main
      - redis
    image: main_service
    container_name: calc_service
    volumes:
      - ./calc:/app/custom
    environment:
      - FLASK_APP=custom.calc:app
      - FLASK_ENV=development
      - FLASK_DEBUG=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "8000:5000"
    networks:
      - app-network
  string:
    depends_on:
      - main
      - redis
    image: main_service
    container_name: string_service
    volumes:
      - ./string:/app/custom
    environment:
      - FLASK_APP=custom.string:app
      - FLASK_ENV=development
      - FLASK_DEBUG=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "8001:5000"
    networks:
      - app-network
  last:
    depends_on:
      - main
      - redis
    image: main_service
    container_name: last_service
    volumes:
      - ./last:/app/custom
    environment:
      - FLASK_APP=custom.last:app
      - FLASK_ENV=development
      - FLASK_DEBUG=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "8002:5000"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 10s
      timeout: 5s
      retries: 3
networks:
  app-network:
    driver: bridge